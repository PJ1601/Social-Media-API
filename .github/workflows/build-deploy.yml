name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: Testing
    env:
      DATABASE_HOSTNAME : ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT : ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD : ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME : ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME : ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY : ${{secrets.SECRET_KEY}}
      ALGORITHM : ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES : ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      DATABASE_URL : ${{secrets.DATABASE_URL}}

    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
         - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest -v

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: Production
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: deploying on Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP}} #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}